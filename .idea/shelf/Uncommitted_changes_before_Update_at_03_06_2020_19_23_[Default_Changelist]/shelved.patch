Index: src/Graphics/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Graphics;\r\n\r\nimport Entity.*;\r\n\r\nimport Game.Partie;\r\nimport Utils.Direction;\r\nimport javafx.animation.Animation;\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.animation.TranslateTransition;\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.media.AudioClip;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.nio.file.Paths;\r\n\r\nimport static Utils.Constants.*;\r\n\r\npublic class Window extends Application {\r\n    Direction dir = Direction.RIGHT;\r\n\r\n    Partie partie;\r\n\r\n    double margin = 1.1;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n\r\n        stage.setTitle(\"toto\");\r\n\r\n        final Group root = new Group();\r\n\r\n        Canvas canvas = new Canvas(SCENE_WIDTH, SCENE_HEIGHT * margin);\r\n        GraphicsContext gc = canvas.getGraphicsContext2D();\r\n        root.getChildren().add(canvas);\r\n\r\n        Image img = new Image(\"img/menu1Animate.png\", SCENE_WIDTH, SCENE_HEIGHT, false, false);\r\n        ImageView iv = new ImageView(img);\r\n        root.getChildren().add(iv);\r\n\r\n        Image fantomes = new Image(\"img/fantomes.png\", 350, 150, false, false);\r\n        ImageView ivFtmes = new ImageView(fantomes);\r\n        ivFtmes.preserveRatioProperty();\r\n        ivFtmes.setX(-375);\r\n        ivFtmes.setY(SCENE_HEIGHT - SCENE_HEIGHT/6.0);\r\n\r\n        TranslateTransition transition = new TranslateTransition();\r\n        transition.setDuration(Duration.seconds(6));\r\n        transition.setToX(1200);\r\n        transition.setToY(0);\r\n        transition.setAutoReverse(false);\r\n        transition.setCycleCount(Animation.INDEFINITE);\r\n        transition.setNode(ivFtmes);\r\n        transition.play();\r\n\r\n        root.getChildren().add(ivFtmes);\r\n\r\n        iv.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n\r\n            menu(stage);\r\n            /*root.getChildren().remove(iv);\r\n            root.getChildren().remove((ivFtmes));\r\n\r\n            try {\r\n\r\n                new AnimationTimer() {\r\n                    long prevtime;\r\n                    long deltaTime;\r\n\r\n                    Partie partie = new Partie(\"src/levels/level1V2.txt\");\r\n\r\n                    AudioClip chomp = Window.openAudio(\"src/music/pacman_chomp.wav\");\r\n\r\n                    public void handle(long currentNanoTime) {\r\n\r\n                        deltaTime = currentNanoTime - prevtime;\r\n\r\n                        //if (!chomp.isPlaying())\r\n                            //chomp.play();\r\n\r\n                        partie.getPacman().changeDir(dir);\r\n                        partie.tick(deltaTime);\r\n\r\n                        drawShapes(gc);\r\n\r\n                        prevtime = currentNanoTime;\r\n                    }\r\n\r\n                    public void drawShapes(GraphicsContext gc) {\r\n                        gc.clearRect(0, 0, SCENE_WIDTH, SCENE_HEIGHT * margin);\r\n\r\n                        for (Entity e : partie.getPlateau().getPlateau()) {\r\n                            e.draw(gc);\r\n                            //e.drawHitbox(gc);\r\n\r\n                            if (e instanceof Ghost)\r\n                                ((Ghost) e).move(partie.getPacman());\r\n\r\n                            //String type = e.getClass().toString().substring(13);\r\n                            //System.out.println(type);\r\n                        }\r\n                        gc.setFill(Color.WHITE);\r\n                        gc.fillText(\"Score : \" + partie.getScore().getScore(), (1.0 * SCENE_WIDTH / 2) * .9, SCENE_HEIGHT * 1.05);\r\n                    }\r\n                }.start();\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }*/\r\n        });\r\n\r\n        Scene scene = new Scene(root, SCENE_WIDTH, SCENE_HEIGHT * margin, Color.BLACK);\r\n\r\n        scene.setOnKeyPressed(event -> {\r\n            switch (event.getCode()) {\r\n                case UP:\r\n                    dir = Direction.UP;\r\n                    break;\r\n                case RIGHT:\r\n                    dir = Direction.RIGHT;\r\n                    break;\r\n                case DOWN:\r\n                    dir = Direction.DOWN;\r\n                    break;\r\n                case LEFT:\r\n                    dir = Direction.LEFT;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        stage.setScene(scene);\r\n\r\n//        AudioClip son = Window.openAudio(\"src/music/pacman_beginning.wav\");\r\n//       son.play();\r\n\r\n        stage.setResizable(true);\r\n        stage.show();\r\n    }\r\n\r\n    private void menu(Stage stage) {\r\n        System.out.println(\"azertyuiop\");\r\n        Image demo = new Image(\"img/demo.png\",300,100,false,false);\r\n        System.out.println(demo.getUrl());\r\n        ImageView ivDemo = new ImageView(demo);\r\n        ivDemo.preserveRatioProperty();\r\n\r\n        Image mdj = new Image(\"img/mdj.png\",700,100,false,false);\r\n        ImageView ivMdj = new ImageView(mdj);\r\n        ivDemo.preserveRatioProperty();\r\n\r\n        Image custo = new Image(\"img/custo.png\",700,100,false,false);\r\n        ImageView ivCusto = new ImageView(custo);\r\n        ivDemo.preserveRatioProperty();\r\n\r\n        Image options = new Image(\"img/options.png\",500,100,false,false);\r\n        ImageView ivOption = new ImageView(options);\r\n        ivDemo.preserveRatioProperty();\r\n\r\n        Image soundOn = new Image(\"img/son-on.png\", 200, 100, false, false);\r\n        ImageView ivSoundOn = new ImageView(soundOn);\r\n        ivSoundOn.preserveRatioProperty();\r\n        ivSoundOn.setX(0);\r\n        ivSoundOn.setY(800);\r\n\r\n        Image soundOff = new Image(\"img/son-off.png\", 200, 100, false, false);\r\n        ImageView ivSoundOff = new ImageView(soundOff);\r\n        ivSoundOff.preserveRatioProperty();\r\n        ivSoundOff.setX(0);\r\n        ivSoundOff.setY(800);\r\n\r\n        Group root = new Group();\r\n\r\n        VBox vbox=new VBox();\r\n        vbox.setSpacing(90.);\r\n        vbox.setAlignment(Pos.TOP_CENTER);\r\n        vbox.getChildren().addAll(ivDemo,ivMdj,ivCusto,ivOption);\r\n\r\n        Canvas c = new Canvas(800,900);\r\n        GraphicsContext bg = c.getGraphicsContext2D();\r\n        Image image = new Image(\"img/bg.png\");\r\n        bg.drawImage(image, 0, 0, 800,900);\r\n\r\n        root.getChildren().add(c);\r\n        root.getChildren().add(vbox);\r\n        root.getChildren().add(ivSoundOn);\r\n\r\n        ivDemo.addEventHandler(MouseEvent.MOUSE_CLICKED, event ->   {\r\n            jeu(stage);\r\n        });\r\n\r\n        ivMdj.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n            System.out.println(\"mdj\");\r\n        });\r\n\r\n        ivCusto.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n            custo(stage);\r\n        });\r\n\r\n        ivOption.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n            System.out.println(\"option\");\r\n        });\r\n\r\n        ivSoundOn.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n            root.getChildren().add(ivSoundOff);\r\n            root.getChildren().remove(ivSoundOn);\r\n        });\r\n\r\n        ivSoundOff.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\r\n            root.getChildren().add(ivSoundOn);\r\n            root.getChildren().remove(ivSoundOff);\r\n        });\r\n\r\n        stage.setScene(new Scene(root,800,900));\r\n    }\r\n\r\n    private void jeu(Stage stage) {\r\n        final Group root = new Group();\r\n\r\n        Canvas canvas = new Canvas(SCENE_WIDTH, SCENE_HEIGHT * margin);\r\n        GraphicsContext gc = canvas.getGraphicsContext2D();\r\n        root.getChildren().add(canvas);\r\n        Scene scene = new Scene(root);\r\n        scene.setOnKeyPressed(event -> {\r\n            switch (event.getCode()) {\r\n                case UP:\r\n                    dir = Direction.UP;\r\n                    break;\r\n                case RIGHT:\r\n                    dir = Direction.RIGHT;\r\n                    break;\r\n                case DOWN:\r\n                    dir = Direction.DOWN;\r\n                    break;\r\n                case LEFT:\r\n                    dir = Direction.LEFT;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        stage.setScene(scene);\r\n\r\n        try {\r\n            partie = new Partie(\"src/levels/level1V2.txt\");\r\n            new AnimationTimer() {\r\n                long prevtime;\r\n                long deltaTime;\r\n\r\n\r\n\r\n                AudioClip chomp = Window.openAudio(\"src/music/pacman_chomp.wav\");\r\n\r\n                public void handle(long currentNanoTime) {\r\n\r\n                    deltaTime = currentNanoTime - prevtime;\r\n\r\n                    //if (!chomp.isPlaying())\r\n                    //chomp.play();\r\n\r\n                    partie.getPacman().changeDir(dir);\r\n                    partie.tick(deltaTime);\r\n\r\n                    drawShapes(gc);\r\n\r\n                    prevtime = currentNanoTime;\r\n                }\r\n\r\n                public void drawShapes(GraphicsContext gc) {\r\n                    gc.setFill(Color.BLACK);\r\n                    gc.fillRect(0, 0, SCENE_WIDTH, SCENE_HEIGHT * margin);\r\n\r\n                    for (Entity e : partie.getPlateau().getPlateau()) {\r\n                        e.draw(gc);\r\n                        //e.drawHitbox(gc);\r\n\r\n                        if (e instanceof Ghost)\r\n                            ((Ghost) e).move(partie.getPacman());\r\n\r\n                        //String type = e.getClass().toString().substring(13);\r\n                        //System.out.println(type);\r\n                    }\r\n                    gc.setFill(Color.WHITE);\r\n                    gc.fillText(\"Score : \" + partie.getScore().getScore(), (1.0 * SCENE_WIDTH / 2) * .9, SCENE_HEIGHT * 1.05);\r\n                }\r\n            }.start();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n/*\r\n    private void custo(Stage stage) {\r\n        HBox popVbox=new HBox();\r\n\r\n        Group pop = new Group();\r\n\r\n        Image blueWall = new Image(\"img/wall/blue/BBP.png\", 200, 200, false, false);\r\n        ImageView ivBlueWall = new ImageView(blueWall);\r\n\r\n        popVbox.getChildren().add(ivBlueWall);\r\n\r\n        ivBlueWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"blue\");\r\n            partie.getPlateau().setWalls(\"blue\");\r\n            menu(stage);\r\n        });\r\n\r\n        Image greenWall = new Image(\"img/wall/green/GBP.png\", 200, 200, false, false);\r\n        ImageView ivGreenWall = new ImageView(greenWall);\r\n\r\n        popVbox.getChildren().add(ivGreenWall);\r\n\r\n        ivGreenWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"green\");\r\n            partie.getPlateau().setWalls(\"green\");\r\n            menu(stage);\r\n        });\r\n\r\n        Image orangeWall = new Image(\"img/wall/orange/OBP.png\", 200, 200, false, false);\r\n        ImageView ivorangeWall = new ImageView(orangeWall);\r\n\r\n        popVbox.getChildren().add(ivorangeWall);\r\n\r\n        ivorangeWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"orange\");\r\n            partie.getPlateau().setWalls(\"orange\");\r\n            menu(stage);\r\n        });\r\n\r\n        Image purpleWall = new Image(\"img/wall/purple/PBP.png\", 200, 200, false, false);\r\n        ImageView ivpurpleWall = new ImageView(purpleWall);\r\n\r\n        popVbox.getChildren().add(ivpurpleWall);\r\n\r\n        ivpurpleWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"purple\");\r\n            partie.getPlateau().setWalls(\"purple\");\r\n            menu(stage);\r\n        });\r\n\r\n        Image redWall = new Image(\"img/wall/red/RBP.png\", 200, 200, false, false);\r\n        ImageView ivredWall = new ImageView(redWall);\r\n\r\n        popVbox.getChildren().add(ivredWall);\r\n\r\n        ivredWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"red\");\r\n            partie.getPlateau().setWalls(\"red\");\r\n            menu(stage);\r\n        });\r\n\r\n        Image yellowWall = new Image(\"img/wall/yellow/YBP.png\", 200, 200, false, false);\r\n        ImageView ivyellowWall = new ImageView(yellowWall);\r\n\r\n        popVbox.getChildren().add(ivyellowWall);\r\n\r\n        ivyellowWall.addEventHandler(MouseEvent.MOUSE_CLICKED, reset -> {\r\n            System.out.println(\"yellow\");\r\n            partie.getPlateau().setWalls(\"yellow\");\r\n            menu(stage);\r\n        });\r\n\r\n        pop.getChildren().add(popVbox);\r\n\r\n\r\n        Scene popUp = new Scene(pop,1250,200);\r\n        stage.setScene(popUp);\r\n        stage.show();\r\n    }\r\n*/\r\n    public static AudioClip openAudio(String path) {\r\n        return new AudioClip(Paths.get(path).toUri().toString());\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Graphics/Window.java	(revision 8c48e44c9b3f4e2484659ee566f8a79e0a4ff1e0)
+++ src/Graphics/Window.java	(date 1591204923463)
@@ -73,7 +73,7 @@
         iv.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {
 
             menu(stage);
-            /*root.getChildren().remove(iv);
+            root.getChildren().remove(iv);
             root.getChildren().remove((ivFtmes));
 
             try {
@@ -121,7 +121,7 @@
 
             } catch (Exception e) {
                 e.printStackTrace();
-            }*/
+            }
         });
 
         Scene scene = new Scene(root, SCENE_WIDTH, SCENE_HEIGHT * margin, Color.BLACK);
@@ -211,7 +211,7 @@
         });
 
         ivCusto.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {
-            custo(stage);
+            /*custo(stage);*/
         });
 
         ivOption.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {
